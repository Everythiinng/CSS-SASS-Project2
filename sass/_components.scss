////////////////////////////////////////////////////////////////////////////////////////////////////
///THE HEADER / SEARCH BAR

// LOGO

.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

//////////////////////////////////////////////////////////////////
// SEARCH BOX

.search {
  flex: 0 0 40%;

  display: flex;
  align-items: center;
  justify-content: center;

  @media only screen and (max-width: $bp-smallest) {
    order: 1;
    flex: 0 0 100%;
    background-color: var(--color-grey-light-2);
  }

  &__input {
    font-family: inherit; //The input doesnt automatically inherit the font family
    font-size: inherit; //The input doesnt automatically inherit the font size
    color: inherit; //The input doesnt auto inherit the color
    background-color: var(--color-grey-light-2);
    border-radius: 100px;
    border: none;
    padding: 0.7rem 2rem;
    width: 90%;
    transition: all 0.3s;
    margin-right: -3rem; // We give -margin-right so the button can move inside the input

    // :focus is when you click on the input to write something
    &:focus {
      outline: none; //No outline around the input
      width: 100%;
      background-color: var(--color-grey-light-2);
    }

    // the ::input-placeholder styles the placeholder
    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  //   With this we are saying when the input is clicked (writing something) change the style of button
  &__input:focus + &__button {
    background-color: var(--color-grey-light-2);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    // :active is when you press the button
    &:active {
      transform: translateY(2px);
    }
  }
  &__icon {
    fill: var(--color-grey-dark-3); // We use fil: to color the SVG's
    height: 2rem;
    width: 2rem;
  }
}

//////////////////////////////////////////////////////////////////
// USER NAVIGATION

.user-nav {
  align-self: stretch;

  display: flex;
  justify-content: flex-end;
  align-items: center;

  //   This selects all the children in the user-nav
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%; //We set this height so the hover can go from top to bottom of the header
    //   We made all the child elements of the user-nav a flex containers so we can align the icons and the notification inside in the center :D
    display: flex;
    align-items: center;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }
  &__icon {
    // We need to give sizes to SVG's, quite simple
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-3);
  }
  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 100px;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    // 4LVLS of flexbox hehe
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    width: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

/////////////////////////////////////////////////////////////////////////////////////////////////
///SIDE NAVIGATION

.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: flex;
    margin: 0;
  }

  &__item {
    position: relative; // We make it relative so the :before works

    &:not(:last-child) {
      margin-bottom: 0.5rem;
      @media only screen and (max-width: $bp-medium) {
        margin-bottom: 0;
      }
    }

    @media only screen and (max-width: $bp-medium) {
      flex: 1;
    }
  }

  //   We used ::before to create a red line before the __item(which is the link and icon inside it) and then transition it with hover
  &__item::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%; // So it has the same height as the &__item
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s, background-color 0.1s; //So first the transform happens within .2s,
    //  width happens with a delay of .2s and then plays for the duration of .4s with a custom speed of cubic bezier
    // then comes the background-color change, which happen on the :active(CLICK) action
    transform-origin: center; // Default is center: allows us where to start the animation from
  }

  //   With this we tell it that when the itembox is hovered we select the ::before element to change
  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1);
    width: 100%;
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-transform: uppercase;
    text-decoration: none;
    display: block;
    padding: 1.5rem 3rem;
    position: relative;
    z-index: 10; //zindex works only when we have a position specified :D

    display: flex;
    align-items: center;

    @media only screen and (max-width: $bp-medium) {
      justify-content: center;
      padding: 2rem;
    }

    @media only screen and (max-width: $bp-small) {
      flex-direction: column;
      padding: 1.5rem 0.5rem;
    }
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; // This means the color of the current element or the parent, which is __link

    @media only screen and (max-width: $bp-small) {
      margin-right: 0;
      margin-bottom: 0.7rem;
      width: 1.5rem;
      height: 1.5rem;
    }
  }
}

//////////////////////////////////////////////////////////////////
// LEGAL TEXT

.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;

  @media only screen and (max-width: $bp-medium) {
    display: none;
  }
}

//////////////////////////////////////////////////////////////////
/// HOTEL VIEW
///
// GALLERY

.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block; // Img should always be a block(to not have any white space on the bottom or top) or inline
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// HOTEL LAS PALMAS HEADER
///

.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;

    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
      padding: 1.25rem 2rem;
    }
  }
  &__stars {
    // flex: 1;
    margin-right: auto; //  So this is a trick with flexbox, we use this when we want to create space between some items. :D
    display: flex;
  }
  &__icon-star,
  &__icon-location {
    height: 1.75rem;
    width: 1.75rem;
    fill: var(--color-primary);
  }
  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--color-primary);
    color: #fff;
    margin-left: 3rem;
    padding: 0 2.25rem;
    align-self: stretch;

    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;

    @media only screen and (max-width: $bp-small) {
      padding: 0 1.5rem;
    }
  }
  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    @media only screen and (max-width: $bp-small) {
      font-size: 1.8rem;
    }
  }
  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
    @media only screen and (max-width: $bp-small) {
      font-size: 0.5rem;
    }
  }
}
///////////////////////////////////////////////////
// BTN INLINE HOTEL

.btn-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit; //We set it to inherit because no matter where we use it will adjust to the parent element
  border-bottom: 1px solid currentColor;
  background-color: transparent;
  padding-bottom: 2px;
  display: inline-block;
  cursor: pointer;
  transition: all 0.2s;

  & span {
    margin-left: 3px;
    transition: margin-left 0.2s;
  }

  &:hover {
    color: var(--color-grey-dark-1);

    & span {
      margin-left: 8px;
    }
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, 0.25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////
// PARAGRAPH / DESCRIPTION

// last-of-type grabs the last type which in this case are paragraphs.
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}

///////////////////////////////////////////////////
// LIST / DESCRIPTION

.list {
  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  flex-wrap: wrap;

  &__item {
    flex: 0 0 50%;
    margin-bottom: 0.7rem;
  }

  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: 0.7rem;

    //Older browser using SVG with background image
    background-image: url(../img/chevron-thin-right.svg);
    background-size: cover;

    // Newer browser using SVG with masks :D
    // Using masks we give a background color and we see THROUGH a mask to see that background color.
    @supports (-webkit-mask-image: url()) or (mask-image: url()) {
      background-color: var(--color-primary);
      -webkit-mask-image: url(../img/chevron-thin-right.svg);
      -webkit-mask-size: cover;
      mask-image: url(../img/chevron-thin-right.svg);
      mask-size: cover;
      background-image: none; // We add this cuz the icon will inherit the background image from the normal url.
    }
  }
}

///////////////////////////////////////////////////
// RECOMMEND / DESCRIPTION

.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-dark-4);
  display: flex;
  align-items: center;

  &__count {
    margin-right: auto;
  }
  &__friends {
    display: flex;
  }

  &__photo {
    // box-sizing: border-box; // With border box we set the padding and border line inside the height and width
    box-sizing: content-box; // We use content box because we only want the content to be inside the height and width
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    &:not(:last-child) {
      margin-right: -2rem;
    }
  }
}

///////////////////////////////////////////////////////////////////////////////////////////
// REVIEWS

.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;
  position: relative;
  overflow: hidden;

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-bottom: 3rem;
  }

  &__text {
    margin-bottom: 2rem;
    z-index: 10;
    position: relative; // The z index to work we need a position
  }
  &__user {
    display: flex;
    align-items: center;
  }
  &__user-box {
    margin-right: auto;
  }
  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: 0.4rem;
  }
  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__photo {
    height: 4.5rem;
    width: 4.5rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }
  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }

  &::before {
    content: "\201C";
    position: absolute;
    top: -8.75rem;
    left: -1rem;
    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    z-index: 5;
  }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CTA

.cta {
  padding: 3.5rem 0;
  text-align: center;

  @media only screen and (max-width: $bp-medium) {
    padding: 2.5rem 0;
  }

  &__book-now {
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: 300;
    margin-bottom: 2.5rem;
  }
}

.btn {
  font-size: 1.5rem;
  border: none;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 100px;
  color: #fff;
  position: relative;
  overflow: hidden;
  cursor: pointer;

  background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary));

  & > * {
    display: inline-block;

    height: 100%;
    width: 100%;
    transition: all 0.2s;
  }

  &__visible {
    padding: 2rem 7.5rem;
  }

  &__invisible {
    position: absolute;
    padding: 2rem 0;
    left: 0;
    top: -100%;
  }

  &:hover {
    background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary));
  }

  &:hover &__visible {
    transform: translateY(100%);
  }

  &:hover &__invisible {
    top: 0;
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }
}
